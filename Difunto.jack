class Difunto {
    field int inicio;
    field int location;
    field int memoria;

    constructor Difunto new(int posInit){
        let location = posInit;
        do draw(location);
        return this;
    }

    method void dispose(){
        do Memory.deAlloc(this);
        return;
    }

    // dibujar el difunto
    method void draw(int location) {
        var int memAddress;
        let memAddress = 16384+location;
        // column 0
	do Memory.poke(memAddress, 7680);
	do Memory.poke(memAddress +32, 7936);
	do Memory.poke(memAddress +64, 8064);
	do Memory.poke(memAddress +96, 8064);
	do Memory.poke(memAddress +128, 8191);
	do Memory.poke(memAddress +160, 8191);
	do Memory.poke(memAddress +192, 8191);
	do Memory.poke(memAddress +224, -1);
	do Memory.poke(memAddress +256, -1);
	do Memory.poke(memAddress +288, 8191);
	do Memory.poke(memAddress +320, 8191);
	do Memory.poke(memAddress +352, 8191);
	do Memory.poke(memAddress +384, 8176);
	do Memory.poke(memAddress +416, 8176);
	do Memory.poke(memAddress +448, -1);
	do Memory.poke(memAddress +480, -1);
	do Memory.poke(memAddress +512, 8191);
	do Memory.poke(memAddress +544, 8191);
	do Memory.poke(memAddress +576, 8191);
	do Memory.poke(memAddress +608, 8191);
	// column 1
	do Memory.poke(memAddress +161, 124);
	do Memory.poke(memAddress +193, 124);
	do Memory.poke(memAddress +225, 387);
	do Memory.poke(memAddress +257, 387);
	do Memory.poke(memAddress +289, 384);
	do Memory.poke(memAddress +321, 224);
	do Memory.poke(memAddress +353, 120);
	do Memory.poke(memAddress +385, 224);
	do Memory.poke(memAddress +417, 384);
	do Memory.poke(memAddress +449, 387);
	do Memory.poke(memAddress +481, 387);
	do Memory.poke(memAddress +513, 124);
	do Memory.poke(memAddress +545, 124);
	return;
    }
}