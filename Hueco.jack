class Hueco {
    field int inicio;
    field int location;
    field int memoria;

    constructor Hueco new(int posInit){
        let location = posInit;
        do draw(location);
        return this;
    }

    method void dispose(){
        do Memory.deAlloc(this);
        return;
    }

    // dibujar el hueco
    method void draw(int location) {
        var int memAddress;
        let memAddress = 16384+location;
        // column 0
    	do Memory.poke(memAddress +32, -4096);
    	do Memory.poke(memAddress +64, -256);
    	do Memory.poke(memAddress +96, -32);
    	do Memory.poke(memAddress +128, -4);
    	do Memory.poke(memAddress +160, -2);
    	do Memory.poke(memAddress +192, -2);
    	do Memory.poke(memAddress +224, -1);
    	do Memory.poke(memAddress +256, -1);
    	do Memory.poke(memAddress +288, -2);
    	do Memory.poke(memAddress +320, -2);
    	do Memory.poke(memAddress +352, -8);
    	do Memory.poke(memAddress +384, -16);
    	do Memory.poke(memAddress +416, -256);
    	// column 1
    	do Memory.poke(memAddress +1, 127);
    	do Memory.poke(memAddress +33, 255);
    	do Memory.poke(memAddress +65, 511);
    	do Memory.poke(memAddress +97, 511);
    	do Memory.poke(memAddress +129, 511);
    	do Memory.poke(memAddress +161, 511);
    	do Memory.poke(memAddress +193, 511);
    	do Memory.poke(memAddress +225, 255);
   	do Memory.poke(memAddress +257, 255);
    	do Memory.poke(memAddress +289, 127);
    	do Memory.poke(memAddress +321, 63);
   	do Memory.poke(memAddress +353, 31);
    	do Memory.poke(memAddress +385, 7);
    	return;
    }
}
