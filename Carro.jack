class Carro {
    field int inicio;
    field int location;
    field int memoria;

    constructor Carro new(int posInit){
        let location = posInit;
        do draw(location);
        return this;
    }

    method void dispose(){
        do Memory.deAlloc(this);
        return;
    }

    // dibujar el carro
    method void draw(int location){
        var int memAddress;
        let memAddress = 16384+location;
        // column 0
	do Memory.poke(memAddress +96, 8064);
	do Memory.poke(memAddress, 0);
	do Memory.poke(memAddress +32, 0);
	do Memory.poke(memAddress +64, 0);
	do Memory.poke(memAddress +128, 8064);
	do Memory.poke(memAddress +160, 8064);
	do Memory.poke(memAddress +192, -31208);
	do Memory.poke(memAddress +224, -14792);
	do Memory.poke(memAddress +256, -13064);
	do Memory.poke(memAddress +288, -136);
	do Memory.poke(memAddress +320, -136);
	do Memory.poke(memAddress +352, -136);
	do Memory.poke(memAddress +384, -136);
	do Memory.poke(memAddress +416, -136);
	do Memory.poke(memAddress +448, -136);
	do Memory.poke(memAddress +480, -136);
	do Memory.poke(memAddress +512, -13064);
	do Memory.poke(memAddress +544, -14792);
	do Memory.poke(memAddress +576, -31208);
	do Memory.poke(memAddress +608, 8064);
	do Memory.poke(memAddress +640, 8064);
	do Memory.poke(memAddress +672, 8064);
	// column 1
	do Memory.poke(memAddress +161, -2048);
	do Memory.poke(memAddress +65, 0);
	do Memory.poke(memAddress +97, 0);
	do Memory.poke(memAddress +129, 0);
	do Memory.poke(memAddress +193, -24577);
	do Memory.poke(memAddress +225, -16385);
	do Memory.poke(memAddress +257, -16385);
	do Memory.poke(memAddress +289, 16383);
	do Memory.poke(memAddress +321, -1);
	do Memory.poke(memAddress +353, -1);
	do Memory.poke(memAddress +385, -1);
	do Memory.poke(memAddress +417, -1);
	do Memory.poke(memAddress +449, -1);
	do Memory.poke(memAddress +481, 16383);
	do Memory.poke(memAddress +513, -16385);
	do Memory.poke(memAddress +545, -16385);
	do Memory.poke(memAddress +577, -24577);
	do Memory.poke(memAddress +609, -2048);
	// column 2
	do Memory.poke(memAddress +98, 4032);
	do Memory.poke(memAddress +2, 0);
	do Memory.poke(memAddress +34, 0);
	do Memory.poke(memAddress +66, 0);
	do Memory.poke(memAddress +130, -12352);
	do Memory.poke(memAddress +162, -12352);
	do Memory.poke(memAddress +194, -15487);
	do Memory.poke(memAddress +226, -32382);
	do Memory.poke(memAddress +258, 707);
	do Memory.poke(memAddress +290, 607);
	do Memory.poke(memAddress +322, 2686);
	do Memory.poke(memAddress +354, -1);
	do Memory.poke(memAddress +386, -1);
	do Memory.poke(memAddress +418, -1);
	do Memory.poke(memAddress +450, 2686);
	do Memory.poke(memAddress +482, 607);
	do Memory.poke(memAddress +514, 706);
	do Memory.poke(memAddress +546, -32381);
	do Memory.poke(memAddress +578, -15488);
	do Memory.poke(memAddress +610, -12352);
	do Memory.poke(memAddress +642, -12352);
	do Memory.poke(memAddress +674, 4032);
	// column 3
	do Memory.poke(memAddress +131, 7);
	do Memory.poke(memAddress +35, 0);
	do Memory.poke(memAddress +67, 0);
	do Memory.poke(memAddress +99, 0);
	do Memory.poke(memAddress +163, 7);
	do Memory.poke(memAddress +195, 15);
	do Memory.poke(memAddress +227, 15);
	do Memory.poke(memAddress +259, 15);
	do Memory.poke(memAddress +291, 14);
	do Memory.poke(memAddress +323, 14);
	do Memory.poke(memAddress +355, 31);
	do Memory.poke(memAddress +387, 31);
	do Memory.poke(memAddress +419, 31);
	do Memory.poke(memAddress +451, 14);
	do Memory.poke(memAddress +483, 14);
	do Memory.poke(memAddress +515, 15);
	do Memory.poke(memAddress +547, 15);
	do Memory.poke(memAddress +579, 15);
	do Memory.poke(memAddress +611, 7);
	do Memory.poke(memAddress +643, 7);
	return;
    }
}